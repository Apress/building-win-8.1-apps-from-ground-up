<Page
    x:Name="pageRoot"
    x:Class="BW8AGU.Samples.CSharp.LiveTilesSample"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BW8AGU.Samples.CSharp"
    xmlns:common="using:BW8AGU.Samples.CSharp.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Margin="39,59,39,0" Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                        VerticalAlignment="Top"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
                        IsHitTestVisible="false" TextWrapping="NoWrap" VerticalAlignment="Bottom" Margin="0,0,30,40"/>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="32" />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="250" Width="Auto" />
                <ColumnDefinition MinWidth="550" Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Text="Templates" />
            <ComboBox ItemsSource="{Binding templates}" Grid.Row="1" SelectionChanged="ComboBox_SelectionChanged"  />
            <TextBox x:Name="templateNameTextBox" Grid.Column="1"/>
            <TextBox x:Name="xmlTemplateNameTextBox" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" IsReadOnly="False" AcceptsReturn="True"/>
            <Button Grid.Column="0" Grid.Row="2" VerticalAlignment="Top" Content="Test" Click="ShowTestNotification" />
            <CheckBox IsChecked="{Binding UseQueue, Mode=TwoWay}" Content="Enalbe queue" Grid.Column="2" Grid.Row="1" />
            <TextBox x:Name="xmlResultNameTextBox" Grid.Column="1" Grid.Row="3" IsReadOnly="False" AcceptsReturn="True"/>
        </Grid>
    </Grid>
</Page>
