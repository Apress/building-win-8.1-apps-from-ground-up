'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.32559
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System.Runtime.Serialization

'
'This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.20617.1
'
Namespace FakeServiceReference
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SimpleAppointment", [Namespace]:="http://schemas.datacontract.org/2004/07/FakeService")>  _
    Partial Public Class SimpleAppointment
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private EndDateField As Date
        
        Private IdField As Integer
        
        Private LocationField As String
        
        Private StartDateField As Date
        
        Private SubjectField As String
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EndDate() As Date
            Get
                Return Me.EndDateField
            End Get
            Set
                If (Me.EndDateField.Equals(value) <> true) Then
                    Me.EndDateField = value
                    Me.RaisePropertyChanged("EndDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location() As String
            Get
                Return Me.LocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LocationField, value) <> true) Then
                    Me.LocationField = value
                    Me.RaisePropertyChanged("Location")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartDate() As Date
            Get
                Return Me.StartDateField
            End Get
            Set
                If (Me.StartDateField.Equals(value) <> true) Then
                    Me.StartDateField = value
                    Me.RaisePropertyChanged("StartDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Subject() As String
            Get
                Return Me.SubjectField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SubjectField, value) <> true) Then
                    Me.SubjectField = value
                    Me.RaisePropertyChanged("Subject")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="FakeServiceReference.IFakeService")>  _
    Public Interface IFakeService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IFakeService/GetSimpleAppointment", ReplyAction:="http://tempuri.org/IFakeService/GetSimpleAppointmentResponse")>  _
        Function GetSimpleAppointmentAsync() As System.Threading.Tasks.Task(Of FakeServiceReference.SimpleAppointment)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IFakeServiceChannel
        Inherits FakeServiceReference.IFakeService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class FakeServiceClient
        Inherits System.ServiceModel.ClientBase(Of FakeServiceReference.IFakeService)
        Implements FakeServiceReference.IFakeService
        
        ''' <summary>
        ''' Implement this partial method to configure the service endpoint.
        ''' </summary>
        ''' <param name="serviceEndpoint">The endpoint to configure</param>
        ''' <param name="clientCredentials">The client credentials</param>
        Partial Private Shared Sub ConfigureEndpoint(ByVal serviceEndpoint As System.ServiceModel.Description.ServiceEndpoint, ByVal clientCredentials As System.ServiceModel.Description.ClientCredentials)
        End Sub
        
        Public Sub New()
            MyBase.New(FakeServiceClient.GetDefaultBinding, FakeServiceClient.GetDefaultEndpointAddress)
            Me.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IFakeService.ToString
            ConfigureEndpoint(Me.Endpoint, Me.ClientCredentials)
        End Sub
        
        Public Sub New(ByVal endpointConfiguration As EndpointConfiguration)
            MyBase.New(FakeServiceClient.GetBindingForEndpoint(endpointConfiguration), FakeServiceClient.GetEndpointAddress(endpointConfiguration))
            Me.Endpoint.Name = endpointConfiguration.ToString
            ConfigureEndpoint(Me.Endpoint, Me.ClientCredentials)
        End Sub
        
        Public Sub New(ByVal endpointConfiguration As EndpointConfiguration, ByVal remoteAddress As String)
            MyBase.New(FakeServiceClient.GetBindingForEndpoint(endpointConfiguration), New System.ServiceModel.EndpointAddress(remoteAddress))
            Me.Endpoint.Name = endpointConfiguration.ToString
            ConfigureEndpoint(Me.Endpoint, Me.ClientCredentials)
        End Sub
        
        Public Sub New(ByVal endpointConfiguration As EndpointConfiguration, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(FakeServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
            Me.Endpoint.Name = endpointConfiguration.ToString
            ConfigureEndpoint(Me.Endpoint, Me.ClientCredentials)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function GetSimpleAppointmentAsync() As System.Threading.Tasks.Task(Of FakeServiceReference.SimpleAppointment) Implements FakeServiceReference.IFakeService.GetSimpleAppointmentAsync
            Return MyBase.Channel.GetSimpleAppointmentAsync
        End Function
        
        Public Overridable Function OpenAsync() As System.Threading.Tasks.Task
            Return System.Threading.Tasks.Task.Factory.FromAsync(CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(Nothing, Nothing), AddressOf CType(Me,System.ServiceModel.ICommunicationObject).EndOpen)
        End Function
        
        Public Overridable Function CloseAsync() As System.Threading.Tasks.Task
            Return System.Threading.Tasks.Task.Factory.FromAsync(CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(Nothing, Nothing), AddressOf CType(Me,System.ServiceModel.ICommunicationObject).EndClose)
        End Function
        
        Private Shared Function GetBindingForEndpoint(ByVal endpointConfiguration As EndpointConfiguration) As System.ServiceModel.Channels.Binding
            If (endpointConfiguration = EndpointConfiguration.BasicHttpBinding_IFakeService) Then
                Dim result As System.ServiceModel.BasicHttpBinding = New System.ServiceModel.BasicHttpBinding()
                result.MaxBufferSize = Integer.MaxValue
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max
                result.MaxReceivedMessageSize = Integer.MaxValue
                result.AllowCookies = true
                Return result
            End If
            Throw New System.InvalidOperationException(String.Format("Could not find endpoint with name '{0}'.", endpointConfiguration))
        End Function
        
        Private Shared Function GetEndpointAddress(ByVal endpointConfiguration As EndpointConfiguration) As System.ServiceModel.EndpointAddress
            If (endpointConfiguration = EndpointConfiguration.BasicHttpBinding_IFakeService) Then
                Return New System.ServiceModel.EndpointAddress("http://localhost:4398/FakeService.svc")
            End If
            Throw New System.InvalidOperationException(String.Format("Could not find endpoint with name '{0}'.", endpointConfiguration))
        End Function
        
        Private Shared Function GetDefaultBinding() As System.ServiceModel.Channels.Binding
            Return FakeServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IFakeService)
        End Function
        
        Private Shared Function GetDefaultEndpointAddress() As System.ServiceModel.EndpointAddress
            Return FakeServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IFakeService)
        End Function
        
        Public Enum EndpointConfiguration
            
            BasicHttpBinding_IFakeService
        End Enum
    End Class
End Namespace
